backend/controllers/authController.js
File ini kemungkinan besar berisi logika untuk pendaftaran pengguna.
backend/models/User.js
Model ini menangani interaksi dengan tabel users di database.
backend/routes/authRoutes.js
File ini mendefinisikan rute-rute terkait autentikasi, termasuk pendaftaran.
backend/middleware/authMiddleware.js
Middleware ini mungkin digunakan dalam proses autentikasi dan otorisasi.
backend/config/googleAuth.js
Jika Anda menggunakan autentikasi Google, file ini mungkin relevan.
src/components/Register.jsx
Komponen frontend untuk halaman pendaftaran.
src/api/auth.js
File ini mungkin berisi fungsi-fungsi untuk melakukan permintaan API terkait autentikasi.
backend/services/userService.js
Mungkin berisi logika bisnis terkait pengguna, termasuk pendaftaran.
backend/utils/emailService.js dan backend/utils/emailTemplates.js
Jika Anda mengirim email verifikasi, file-file ini mungkin terlibat.
10. backend/config/database.js dan backend/config/mysqlConnection.js
Pastikan konfigurasi database Anda benar.
Berdasarkan struktur tabel database:
Periksa tabel users di mydatabase_users.sql. Pastikan kolom role diatur dengan benar saat pendaftaran (seharusnya 'writer' untuk pendaftar baru).
Periksa juga kolom is_approved dan is_verified di tabel users.
Tabel user_tokens di mydatabase_user_tokens.sql mungkin digunakan untuk token verifikasi atau reset password.
Saran:
Periksa logika di authController.js untuk memastikan role 'writer' ditetapkan dengan benar saat pendaftaran.
Pastikan email verifikasi dikirim dengan benar menggunakan emailService.js.
Verifikasi bahwa proses persetujuan admin berfungsi dengan benar.
Periksa apakah ada kesalahan dalam penanganan respons setelah pendaftaran berhasil di frontend (Register.jsx dan auth.js).

