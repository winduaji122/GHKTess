1. Penyimpanan Token:
- Tabel user_tokens digunakan untuk menyimpan token, baik access token maupun refresh token.
- Kolom type membedakan antara 'refresh' dan 'access' token.
- Kolom expires_at menentukan kapan token tersebut kadaluarsa.
2. Proses Autentikasi:
- Saat user login, sistem akan membuat access token dan refresh token.
- Access token disimpan di client (biasanya di memory atau local storage).
- Refresh token disimpan di database (tabel user_tokens) dan juga di client (biasanya sebagai HTTP-only cookie).
3. Penggunaan Access Token:
- Client menggunakan access token untuk setiap request ke API yang membutuhkan autentikasi.
- Server memvalidasi access token pada setiap request.
4. Proses Refresh:
- Ketika access token kadaluarsa, client akan mengirim refresh token ke endpoint refresh.
- Server memeriksa validitas refresh token di tabel user_tokens.
- Jika valid, server membuat access token baru (dan mungkin refresh token baru).
- Token baru disimpan di database dan dikirim kembali ke client.
5. Keamanan:
- Refresh token memiliki masa berlaku yang lebih lama dibandingkan access token.
- Jika refresh token dicurigai dicompromise, bisa dihapus dari database, memaksa user untuk login ulang.
6. Logout:
- Saat logout, refresh token dihapus dari database dan cookie di client.

Berdasarkan struktur tabel saya:
- Tabel user_tokens bisa digunakan untuk menyimpan multiple token untuk setiap user, yang berguna untuk mengelola sesi di berbagai perangkat.

Agar pengguna tidak perlu login ulang saat memuat halaman:
- Simpan refresh token dalam HTTP-only cookies, dengan masa berlaku yang lebih panjang.
- Access token bisa dikelola di session storage atau memory (untuk keamanan tambahan).
- Implementasikan logika untuk memperbarui access token secara otomatis dengan refresh token setiap kali token hampir kadaluarsa.

Dengan pendekatan ini, saat pengguna memuat ulang halaman, sistem dapat memeriksa access token dan menggunakan refresh token dari cookies jika diperlukan, sehingga pengguna tetap terautentikasi tanpa perlu login ulang.