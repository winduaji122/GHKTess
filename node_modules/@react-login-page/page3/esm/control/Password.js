import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["keyname", "name", "rename", "label"];
import { memo, useEffect } from 'react';
import { Input, useStore } from 'react-login-page';
import { LockIcon } from '../icons/lock';
import { jsx as _jsx } from "react/jsx-runtime";
export var Password = /*#__PURE__*/memo(props => {
  var {
      keyname = 'password',
      name,
      rename,
      label = 'Password:'
    } = props,
    elmProps = _objectWithoutPropertiesLoose(props, _excluded);
  var {
    dispatch
  } = useStore();
  if (!elmProps.children) {
    elmProps.children = LockIcon;
  }
  var key = keyname || name;
  useEffect(() => dispatch({
    ["$" + key]: label
  }), [label]);
  return /*#__PURE__*/_jsx(Input, _extends({
    type: "password",
    placeholder: "Password",
    autoComplete: "on",
    index: 2
  }, elmProps, {
    name: name || rename || keyname,
    keyname: key
  }));
});